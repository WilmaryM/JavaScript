let persona = {
    nombre: 'Juan',
    apellido: 'Perez',
    email: 'jperezQmail.com',
    edad: 28
}


console.log(persona.nombre); 'Juan'
console.log(persona.edad); '28'
console.log(persona.apellido); 'Perez'

console.log(persona);{ nombre: 'Juan',
  apellido: 'Perez',
  email: 'jperezQmail.com',
  edad: 28 }

  
--------------------------------------------------
//otra manera de acceder a las propiedades del objeto
console.log(persona['apellido']);

//for in 

for (nombrePropiedad in persona){
    console.log(nombrePropiedad);
    console.log(persona[nombrePropiedad])
}


  ------------------------------------------------
  agregando metodo a un objeto 

   edad: 28,
    nombreCompleto: function(){
        return this.nombre + ' ' + this.apellido;
    }
}

console.log(persona.nombreCompleto ()); Juan Perez


-------------------------------------------------------
creacion de obejtos
otra manera, pero la primera es mas simple
----------------------------------------
//javascript es sensible a mayúsculas y 
minúsculas(Object es con O mayúscula)
------------------------------------------

let perosna2 = new Object();
perosna2.nombre= 'Carlos';
perosna2.direccion = 'San Maroc 123';
perosna2.tel = '12334456';


console.log(perosna2.tel);

----------------------------------------------


//como agregar informacion
persona.tell = '12344566';
/*un error comun es al escribir mal una palablara si 
lo escribimos mal agregaremos una nueva propiedad en vez de cambiar el valor*/
console.log(persona);{ nombre: 'Juan',
  apellido: 'Perez',
  email: 'jperezQmail.com',
  edad: 28,
  nombreCompleto: [λ: nombreCompleto],
  tell: '12344566' }
-------------------------------------------

//como eliminar informacion
delete persona.tell;
console.log(persona);
{ nombre: 'Juan',
  apellido: 'Perez',
  email: 'jperezQmail.com',
  edad: 28,
  nombreCompleto: [λ: nombreCompleto] }
---------------------------------------

/*formas distintas de impromir un objeto*/

//1 concatenando cada valor decada propiedad
console.log(persona.nombre + ', ' + persona.apellido); Juan, Perez

//2 utilizando for in
for(nombrePropiedad in persona){
    console.log(persona[nombrePropiedad]);Juan 
Perez 
jperezQmail.com 
28 
[λ: nombreCompleto]
}

//3
let peronaArray = Object.values(persona);
console.log(peronaArray); let peronaArray: (string | number | (() => string))[]
[ 'Juan', 'Perez', 'jperezQmail.com', 28, [λ: nombreCompleto] ]

//4 cadena
let personaString = JSON.stringify(persona);
console.log(personaString); let personaString: string
{"nombre":"Juan","apellido":"Perez","email":"jperezQmail.com","edad":28}
--------------------------------------------------



let persona = {
    nombre: 'Juan',
    apellido: 'Perez',
    email: 'jperezQmail.com',
    edad: 28,
    idioma: 'es',
    get lang(){
        return this.idioma.toUpperCase();
    },
    set lang ( lang ){
        this.idioma = lang.toUpperCase();
    },
    get nombreCompleto(){
        return this.nombre + ' ' + this.apellido;
    }
}

console.log( persona.lang );

persona.lang = 'en'; // se llama metodo a set lang

console.log(persona.idioma);
console.log(persona.lang);//se llama metodo get lang

------------------------------------------------------------
//Funcion constructor de objetos
function Persona(nombre, apellido, email,){
    this.nombre = nombre;
    this.apellido = apellido;
    this.email = email; 
    this.nombreCompleto = function(){
        return this.nombre + ' ' + this.apellido
    }
}

let padre = new /*esto o es una variable sino un metodo*/ Persona('Juan', 'Perez', 'jperez@email.com');
console.log(padre);
console.log(padre.nombreCompleto());
//como cambiar los datos
padre.nombre = 'Carlos';
console.log(padre);
padre.tell = ''
let madre = new Persona('Laura', 'Quintero', 'lquintero@email.com');
console.log(madre);
console.log(madre.nombreCompleto());
---------------------------------------------

/distintas formas de crear objetos

let miobjeto = new Object();
let miobjeto2 = {};


let miCadena1 = new String('Hola');
let miCadena2 = 'Hola';

let miNumero = new Number(1);
let miNumero2 = 1;

let miBoolean = new Boolean(false);
let miBoolean2 = false;


let miArreglo1 = new Array();
let miArreglo2 =[];

let mifuncion = new function();
let mifuncion2= function()();
----------------------------------------------

//Funcion constructor de objetos
function Persona(nombre, apellido, email,){
    this.nombre = nombre;
    this.apellido = apellido;
    this.email = email; 
    this.nombreCompleto = function(){
        return this.nombre + ' ' + this.apellido
    }
}
//agregar datos a ambos
Persona.prototype.tel = '6372820';

let padre = new /*esto o es una variable sino un metodo*/ Persona('Juan', 'Perez', 'jperez@email.com');
padre.tel = '345567'
console.log(padre.tel);


let madre = new Persona('Laura', 'Quintero', 'lquintero@email.com');
console.log(madre.tel);
-----------------------------------------------------

let persona1 = {
    nombre: 'Juan',
    apellido: 'Perez',
    /*nombreCompleto: function(){
        return this.nombre + ' ' + this.apellido;
    }*/


    nombreCompleto: function(titulo, tel){
        return titulo + ' :' + this.nombre + ' ' + this.apellido + ', ' + tel;
    }

}

let persona2 = {
    nombre: 'Carlos',
    apellido: 'Lara'
}

/*uso de call para usar el metodo persona1.nombreCompleto 
con los datos de perona2*/

console.log(persona1.nombreCompleto('Lic', '8907653'));

console.log(persona1.nombreCompleto.call(persona2, 'Ing', 9876543));

/*uso de apply para usar el metodo persona1.nombreCompleto 
con los datos de perona2*/
let arreglo = ['Ing', '87665433']
console.log(persona1.nombreCompleto.apply(persona2, arreglo));